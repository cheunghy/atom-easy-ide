# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth

'atom-text-editor:not(.mini)':
  ##### Moving
  'alt->': 'core:move-to-bottom'
  'alt-<': 'core:move-to-top'

'atom-text-editor':
  ##### Git
  'ctrl-z g': 'git-plus:menu'
  'ctrl-z g g': 'git-plus:status'
  ##### Moving
  'ctrl-l': 'vim-mode:scroll-cursor-to-middle-leave'

'atom-workspace':
  ##### Close
  'ctrl-x ctrl-c': 'application:quit'
  'ctrl-x ctrl-z': 'application:minimize'
  ##### Configuration
  'ctrl-z c i': 'application:open-your-init-script'
  'ctrl-z c k': 'application:open-your-keymap'
  ##### Get help
  'ctrl-h ctrl-a': 'application:about'
  ##### Install package
  'f9': 'settings-view:install-packages-and-themes'
  ##### Command palette
  'alt-x': 'command-palette:toggle'
  ##### Cancel
  'ctrl-g': 'core:cancel'
  ##### Buffer
  'ctrl-x ctrl-f': 'application:open'
  ##### Project
  'ctrl-z p p': 'project-manager:list-projects'
